# 레플리카 2로 수정
replicaCount: 2

image:
  # 이미지 와 폴리시도 수정
  repository: 1pro/api-tester
  pullPolicy: Always
  # chart.yaml version 정보에 v1.0.0이것 넣어주면 알아서 1pro/api-tester:v1.0.0
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

#sprint 3 에서 배운다 일단 false 처리로 생성 x
serviceAccount:
  create: false
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}

# 서비스
service:
  type: NodePort
  port: 80
  #      targetPort: http -> 이건 service에 이미 있네
  # nodeport만 service 추가에 추가하고 여기서 변수로 또추가
  #      nodePort: 32221 이거 넣을 공간이 없네 service yaml파일로 고고
  nodePort: 32221

#sprint 3에서 배운다.
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources:
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  # deployment 리소스 부분 넣으면 된다.
  requests:
    memory: "100Mi"
    cpu: "100m"
  limits:
    memory: "200Mi"
    cpu: "200m"



#hpa 쓸지말지인데 일단 false로 둔다.
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80


# 4444 시크릿 디폴로이먼트랑 연결하기
#          volumeMounts:
#            - name: secret-datasource
#              mountPath: /usr/src/myapp/datasource
#      volumes:
#        - name: secret-datasource
#          secret:
#            secretName: api-tester-2221-postgresql
# Additional volumes on the output Deployment definition.
volumes:
  - name: secret-datasource
    secret:
      secretName: api-tester-2221-postgresql
# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: secret-datasource
    mountPath: /usr/src/myapp/datasource





#deployment파일에
#nodeSelector:
#        kubernetes.io/hostname: k8s-master
#이렇게 잇던것
#굳이 마스터 노드 하나라 그냥 냅두기.
nodeSelector: {}

tolerations: []

affinity: {}

# 4444
#configmap용
configmap:
  data:
    properties:
      spring_profiles_active: "dev"
      application_role: "ALL"
      postgresql_filepath: "/usr/src/myapp/datasource/postgresql-info.yaml"

secret:
  data:
    postgresql:
      postgresql-info.yaml: |
        driver-class-name: "org.postgresql.Driver"
        url: "jdbc:postgresql://postgresql:5431"
        username: "dev"
        password: "dev123"
